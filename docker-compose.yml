version: '3.7'
networks:
  project:
    external: false
volumes:
  composer_home:
  mysql_data:
  redis_data:
services:
  redis:
    image: redis:4.0.12-alpine
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - project
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data/
  mysql:
    image: mysql:5.7.24
    environment:
      MYSQL_ROOT_PASSWORD: root
      LANG: C.UTF-8
    networks:
      - project
    volumes:
      - ./docker/mysql/zz-zz.cnf:/etc/mysql/conf.d/zz-zz.cnf
      - ./docker/mysql/init.d/:/docker-entrypoint-initdb.d/
      - mysql_data:/var/lib/mysql/
  fpm:
    build:
      context: ./docker/fpm
      args:
        DEV_GID: ${DEV_GID}
        DEV_UID: ${DEV_UID}
    user: ${DEV_UID}
    environment:
      PHP_IDE_CONFIG: ${DEV_IDE_CONFIG}
    networks:
      - project
    volumes:
      - composer_home:/tmp/composer
  cli:
    build:
      context: ./docker/cli
      args:
        DEV_GID: ${DEV_GID}
        DEV_UID: ${DEV_UID}
    command: /bin/true
    user: ${DEV_UID}
    environment:
      PHP_IDE_CONFIG: ${DEV_IDE_CONFIG}
    networks:
      - project
    volumes:
      - composer_home:/tmp/composer
  cron:
    build:
      context: ./docker/cli
      args:
        DEV_GID: ${DEV_GID}
        DEV_UID: ${DEV_UID}
    command: /usr/sbin/crond -f
    init: true
    user: ${DEV_UID}
    environment:
      PHP_IDE_CONFIG: ${DEV_IDE_CONFIG}
    networks:
      - project
    volumes:
      - ./docker/cli/crontab:/usr/local/etc/cron/dev
  nginx:
    image: nginx:1.14.2-alpine
    command: /bin/sh -c "envsubst '$$DEV_DOMAIN' < /code/docker/nginx/sites.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    environment:
      DEV_DOMAIN: ${DEV_DOMAIN}
    networks:
      - project
    volumes:
      - ./docker/nginx/include:/etc/nginx/include
